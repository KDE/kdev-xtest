<?xml version="1.0" encoding="ISO-8859-1"?>
<root>
<suite name="cmake" dir="buildtools/managers/cmake/tests">
<case name="cmake-astfactorytest" exe="cmake-astfactorytest.shell">
<command name="testNonRegisteredObject" />
<command name="testUnregisterObject" />
<command name="testRegisteredObject" />
<command name="testCaseSensitivity" />
<command name="testCreateObject" />
</case>
<case name="cmake-cmakecondition" exe="cmake-cmakecondition.shell">
<command name="testGoodParse" />
</case>
<case name="cmake-parsertest" exe="cmake-parsertest.shell">
<command name="testLexerCreation" />
<command name="testLexerWithFile" />
<command name="testParserWithGoodData" />
<command name="testParserWithBadData" />
</case>
<case name="cmakeast-test" exe="cmakeast-test.shell">
<command name="testAddExecutableGoodParse" />
<command name="testAddExecutableBadParse" />
<command name="testAddLibraryGoodParse" />
<command name="testAddLibraryBadParse" />
<command name="testAddSubdirectoryGoodParse" />
<command name="testAddSubdirectoryBadParse" />
<command name="testAddTestGoodParse" />
<command name="testAddTestBadParse" />
<command name="testAuxSourceDirectoryGoodParse" />
<command name="testAuxSourceDirectoryBadParse" />
<command name="testBreakGoodParse" />
<command name="testBreakBadParse" />
<command name="testBuildCommandGoodParse" />
<command name="testBuildCommandBadParse" />
<command name="testBuildNameGoodParse" />
<command name="testBuildNameBadParse" />
<command name="testCMakeMinimumRequiredGoodParse" />
<command name="testCMakeMinimumRequiredBadParse" />
<command name="testCMakePolicyGoodParse" />
<command name="testCMakePolicyBadParse" />
<command name="testConfigureFileGoodParse" />
<command name="testConfigureFileBadParse" />
<command name="testCreateTestSourcelistGoodParse" />
<command name="testCreateTestSourcelistBadParse" />
<command name="testEnableLanguageGoodParse" />
<command name="testEnableLanguageBadParse" />
<command name="testEnableTestingGoodParse" />
<command name="testEnableTestingBadParse" />
<command name="testExecProgramGoodParse" />
<command name="testExecProgramBadParse" />
<command name="testExecuteProcessGoodParse" />
    <command name="testExecuteProcessBadParse" />
<command name="testExportGoodParse" />
<command name="testExportBadParse" />
<command name="testExportLibraryDepsGoodParse" />
<command name="testExportLibraryDepsBadParse" />
<command name="testFileGoodParse" />
<command name="testFileBadParse" />
<command name="testFindFileGoodParse" />
<command name="testFindFileBadParse" />
<command name="testFindLibraryGoodParse" />
<command name="testFindLibraryBadParse" />
<command name="testFindPackageGoodParse" />
<command name="testFindPackageBadParse" />
<command name="testFindPathGoodParse" />
<command name="testFindPathBadParse" />
<command name="testFindProgramGoodParse" />
<command name="testFindProgramBadParse" />
<command name="testFltkWrapUiGoodParse" />
<command name="testFltkWrapUiBadParse" />
<command name="testForeachGoodParse" />
<command name="testForeachBadParse" />
<command name="testGetCMakePropertyGoodParse" />
<command name="testGetCMakePropertyBadParse" />
<command name="testGetDirPropertyGoodParse" />
<command name="testGetDirPropertyBadParse" />
<command name="testGetFilenameComponentGoodParse" />
<command name="testGetFilenameComponentBadParse" />
<command name="testGetSourceFilePropGoodParse" />
<command name="testGetSourceFilePropBadParse" />
<command name="testGetTargetPropGoodParse" />
<command name="testGetTargetPropBadParse" />
<command name="testGetTestPropGoodParse" />
<command name="testGetTestPropBadParse" />
<command name="testIfGoodParse" />
<command name="testIfBadParse" />
<command name="testIncludeGoodParse" />
<command name="testIncludeBadParse" />
<command name="testIncludeDirectoriesGoodParse" />
<command name="testIncludeDirectoriesBadParse" />
<command name="testIncludeExternalMsProjectGoodParse" />
<command name="testIncludeExternalMsProjectBadParse" />
<command name="testIncludeRegularExpressionGoodParse" />
<command name="testIncludeRegularExpressionBadParse" />
<command name="testInstallGoodParse" />
<command name="testInstallBadParse" />
<command name="testInstallFilesGoodParse" />
<command name="testInstallFilesBadParse" />
<command name="testInstallProgramsGoodParse" />
<command name="testInstallProgramsBadParse" />
<command name="testInstallTargetsGoodParse" />
<command name="testInstallTargetsBadParse" />
<command name="testLinkDirectoriesGoodParse" />
<command name="testLinkDirectoriesBadParse" />
<command name="testLinkLibrariesGoodParse" />
<command name="testLinkLibrariesBadParse" />
<command name="testListGoodParse" />
<command name="testListBadParse" />
<command name="testLoadCacheGoodParse" />
<command name="testLoadCacheBadParse" />
<command name="testLoadCommandGoodParse" />
<command name="testLoadCommandBadParse" />
<command name="testMacroGoodParse" />
<command name="testMacroBadParse" />
<command name="testFunctionGoodParse" />
<command name="testFunctionBadParse" />
<command name="testMakeDirectoryGoodParse" />
<command name="testMakeDirectoryBadParse" />
<command name="testMarkAsAdvancedGoodParse" />
<command name="testMarkAsAdvancedBadParse" />
<command name="testMathGoodParse" />
<command name="testMathBadParse" />
<command name="testMessageGoodParse" />
<command name="testMessageBadParse" />
<command name="testOptionGoodParse" />
<command name="testOptionBadParse" />
<command name="testOutputRequiredFilesGoodParse" />
<command name="testOutputRequiredFilesBadParse" />
<command name="testProjectGoodParse" />
<command name="testProjectBadParse" />
<command name="testQtWrapCppGoodParse" />
<command name="testQtWrapCppBadParse" />
<command name="testQtWrapUiGoodParse" />
<command name="testQtWrapUiBadParse" />
<command name="testRemoveGoodParse" />
<command name="testRemoveBadParse" />
<command name="testRemoveDefinitionsGoodParse" />
<command name="testRemoveDefinitionsBadParse" />
<command name="testReturnGoodParse" />
<command name="testReturnBadParse" />
<command name="testSeparateArgumentsGoodParse" />
<command name="testSeparateArgumentsBadParse" />
<command name="testSetGoodParse" />
<command name="testSetBadParse" />
<command name="testSetDirectoryPropsGoodParse" />
<command name="testSetDirectoryPropsBadParse" />
<command name="testSetSourceFilesPropsGoodParse" />
<command name="testSetSourceFilesPropsBadParse" />
<command name="testSetTargetPropsGoodParse" />
<command name="testSetTargetPropsBadParse" />
<command name="testSetTestsPropsGoodParse" />
<command name="testSetTestsPropsBadParse" />
<command name="testSiteNameGoodParse" />
<command name="testSiteNameBadParse" />
<command name="testSourceGroupGoodParse" />
<command name="testSourceGroupBadParse" />
<command name="testStringGoodParse" />
<command name="testStringBadParse" />
<command name="testSubdirDependsGoodParse" />
<command name="testSubdirDependsBadParse" />
<command name="testSubdirsGoodParse" />
<command name="testSubdirsBadParse" />
<command name="testTargetLinkLibrariesGoodParse" />
<command name="testTargetLinkLibrariesBadParse" />
<command name="testTryCompileGoodParse" />
<command name="testTryCompileBadParse" />
<command name="testTryRunGoodParse" />
<command name="testTryRunBadParse" />
<command name="testUseMangledMesaGoodParse" />
<command name="testUseMangledMesaBadParse" />
<command name="testUtilitySourceGoodParse" />
<command name="testUtilitySourceBadParse" />
<command name="testVariableRequiresGoodParse" />
<command name="testVariableRequiresBadParse" />
<command name="testVtkMakeInstantiatorGoodParse" />
<command name="testVtkMakeInstantiatorBadParse" />
<command name="testVtkWrapJavaGoodParse" />
<command name="testVtkWrapJavaBadParse" />
<command name="testVtkWrapPythonGoodParse" />
<command name="testVtkWrapPythonBadParse" />
<command name="testVtkWrapTclGoodParse" />
<command name="testVtkWrapTclBadParse" />
<command name="testWhileGoodParse" />
<command name="testWhileBadParse" />
<command name="testWriteFileGoodParse" />
<command name="testWriteFileBadParse" />
</case>
<case name="cmakecompliance" exe="cmakecompliance.shell">
<command name="testEnumerate" />
</case>
<case name="cmakeduchaintest" exe="cmakeduchaintest.shell">
<command name="testDUChainWalk" />
<command name="testUses" />
</case>
<case name="cmakeparserutilstest" exe="cmakeparserutilstest.shell">
<command name="validVersionsTest" />
<command name="invalidVersionsTest" />
</case>
<case name="cmakeprojectvisitortest" exe="cmakeprojectvisitortest.shell">
<command name="testRun" />
</case>
</suite>
<suite name="qmake-parser" dir="buildtools/managers/qmake/parser/tests">
<case name="qmake-assignmenttest" exe="qmake-assignmenttest.shell">
<command name="simpleParsed" />
<command name="assignInValue" />
<command name="commentCont" />
<command name="quotedBrace" />
<command name="quotedVal" />
<command name="quotedValEscapeQuote" />
<command name="dotVariable" />
<command name="underscoreVariable" />
<command name="dashVariable" />
<command name="opNoSpace" />
<command name="opPlusEq" />
<command name="opTildeEq" />
<command name="opMinusEq" />
<command name="opStarEq" />
<command name="opEqual" />
<command name="otherVarSimple" />
<command name="otherVarBrace" />
<command name="otherVarBracket" />
<command name="shellVar" />
<command name="commandExec" />
<command name="bracketVarQuote" />
<command name="pathValue" />
<command name="varNameDollar" />
<command name="commentInMultiline" />
<command name="commandExecQMakeVar" />
<command name="varComment" />
<command name="noDashEndVar" />
<command name="contAfterComment" />
</case>
<case name="qmake-functionscopetest" exe="qmake-functionscopetest.shell">
<command name="execSimpleFunc" />
<command name="execBasicFunc" />
<command name="evalQMakeSyntax" />
<command name="simpleVarArg" />
<command name="argWithEqual" />
<command name="partlyQuotedArg" />
<command name="slashArg" />
<command name="oneStatementScope" />
<command name="nestedFunccalls" />
<command name="multiLineScope" />
<command name="multiLineScopeFuncCall" />
<command name="oneStatementSubScope" />
<command name="notFunc" />
    <command name="orOperator" />
<command name="spaceBeforeBrace" />
<command name="missingStatement" />
<command name="missingBrace" />
<command name="missingParenthesis" />
</case>
<case name="qmake-lexertest" exe="qmake-lexertest.shell">
<command name="varAssignment" />
<command name="operators" />
<command name="scope" />
<command name="functions" />
</case>
<case name="qmake-parsetest" exe="qmake-parsetest.shell">
<command name="successSimpleProject" />
<command name="failSimpleProject" />
<command name="successFullProject" />
<command name="failFullProject" />
</case>
<case name="qmake-scopetest" exe="qmake-scopetest.shell">
<command name="basicScope" />
<command name="basicScopeBrace" />
<command name="nestedScope" />
<command name="missingStatement" />
<command name="missingColon" />
</case>
</suite>
<suite name="cpp-parser" dir="languages/cpp/parser/tests">
  <case name="pooltest" exe="pooltest.shell">
    <command name="testSimpleAllocation" />
    <command name="testObjectAllocation" />
    <command name="testNewBlockAllocation" />
    <command name="testWastedMemoryDueToBlockAllocation" />
    <command name="testStdlibCompliance" />
  </case>
  <case name="parsertest" exe="parsertest.shell">
    <command name="testSymbolTable" />
    <command name="testTokenTable" />
    <command name="testParser" />
    <command name="testParserFail" />
    <command name="testParseMethod" />
    <command name="testForStatements" />
    <command name="testIfStatements" />
    <command name="testComments" />
    <command name="testComments2" />
    <command name="testComments3" />
    <command name="testComments4" />
    <command name="testPreprocessor" />
    <command name="testStringConcatenation" />
    <command name="testCondition" />
  </case>
</suite>
<suite name="duchain" dir="languages/cpp/cppduchain/tests">
<case name="duchaintest" exe="duchaintest.shell">
<command name="testIdentifiers" />
<command name="testContextRelationships" />
<command name="testDeclareInt" />
<command name="testIntegralTypes" />
<command name="testArrayType" />
<command name="testDeclareFor" />
<command name="testVariableDeclaration" />
<command name="testDeclareStruct" />
<command name="testDeclareClass" />
<command name="testDeclareFriend" />
<command name="testDeclareNamespace" />
<command name="testDeclareUsingNamespace" />
<command name="testUsingDeclaration" />
<command name="testDeclareUsingNamespace2" />
<command name="testSearchAcrossNamespace" />
<command name="testSearchAcrossNamespace2" />
<command name="testTemplateEnums" />
<command name="testIntegralTemplates" />
<command name="testTypedef" />
<command name="testTemplateDependentClass" />
<command name="testTemplateFunctions" />
<command name="testTypedefUses" />
<command name="testTemplates" />
<command name="testTemplates2" />
<command name="testTemplatesRebind" />
<command name="testTemplatesRebind2" />
<command name="testTemplateDefaultParameters" />
<command name="testFunctionTemplates" />
<command name="testContextAssignment" />
<command name="testSpecializedTemplates" />
<command name="testFunctionDefinition" />
<command name="testFunctionDefinition2" />
<command name="testFunctionDefinition3" />
<command name="testFunctionDefinition4" />
<command name="testFunctionDefinition5" />
<command name="testBaseClasses" />
<command name="testForwardDeclaration" />
<command name="testForwardDeclaration2" />
<command name="testForwardDeclaration3" />
<command name="testTemplateForwardDeclaration" />
<command name="testTemplateForwardDeclaration2" />
<command name="testStringSets" />
<command name="testIndexedStrings" />
<command name="testEnum" />
<command name="testCaseUse" />
<command name="testSizeofUse" />
<command name="testDefinitionUse" />
<command name="testImportStructure" />
<command name="testDeclareSubClass" />
<command name="testCStruct" />
<command name="testCStruct2" />
</case>
<case name="cppexpressionparsertest" exe="cppexpressionparsertest.shell">
<command name="testSimpleExpression" />
<command name="testTypeConversion" />
<command name="testSmartPointer" />
<command name="testCasts" />
<command name="testBaseClasses" />
<command name="testTemplatesSimple" />
<command name="testTemplates" />
<command name="testOperators" />
<command name="testTemplateFunctions" />
<command name="testThis" />
<command name="testArray" />
<command name="testDynamicArray" />
</case>
</suite>
<suite name="cpp" dir="languages/cpp/tests">
<case name="cppcodecompletiontest" exe="cppcodecompletiontest.shell">
<command name="testInclude" />
<command name="testTypeConversion" />
<command name="testCompletionContext" />
<command name="testUpdateChain" />
<command name="testHeaderSections" />
<command name="testForwardDeclaration" />
<command name="testAcrossHeaderReferences" />
<command name="testAcrossHeaderTemplateReferences" />
<command name="testEnvironmentMatching" />
<command name="testUsesThroughMacros" />
<command name="testMacroExpansionRanges" />
<command name="testPreprocessor" />
</case>
</suite>
<suite name="veritas" dir="languages/cpp/veritas/tests">
    <case name="classskeleton" exe="veritas-ut-classskeleton.shell">
        <command name="construct" />
    </case>
    <case name="classwriter" exe="veritas-ut-classwriter.shell">
        <command name="noMethods" />
        <command name="method" />
        <command name="constructor" />
    </case>
    <case name="constructorskeleton" exe="veritas-ut-constructorskeleton.shell">
    <command name="instantiate" />
    </case>
    <case name="includewriter" exe="veritas-ut-includewriter.shell">
        <command name="sameDir" />
        <command name="oneDirUp" />
        <command name="oneDirDown" />
        <command name="guards" />
    </case>
    <case name="methodskeleton" exe="veritas-ut-methodskeleton.shell">
        <command name="construct" />
    </case>
    <case name="ktextdocumentstub" exe="veritas-ut-ktextdocumentstub.shell">
        <command name="text" />
        <command name="textRange" />
    </case>
    <case name="stubcreation" exe="veritas-ut-stubcreation.shell">
        <command name="appendStubToClassName" />
        <command name="basicConstructor" />
        <command name="basicDestructor" />
        <command name="basicInterface" />
        <command name="nonVoidReturnType" />
        <command name="nonVirtualMethod" />
        <command name="privateMethod" />
        <command name="signal" />
    </case>

</suite>
<suite name="check" dir="plugins/xtest/check/tests/">
<case name="check-it-checkrunnertest" exe="check-it-checkrunnertest.shell">
<command name="empty" />
<command name="sunnyDay" />
<command name="multiSuite" />
</case>
</suite>
<suite name="cppunit" dir="plugins/xtest/cppunit/tests/">
<case name="cppunit-it-cppunitrunnertest" exe="cppunit-it-cppunitrunnertest.shell">
<command name="empty" />
<command name="sunnyDay" />
<command name="multiSuite" />
</case>
</suite>
<suite name="qtest" dir="plugins/xtest/qtest/tests/">
    <case name="qtest-it-qtestrunnertest" exe="qtest-it-qtestrunnertest.shell">
        <command name="empty" />
        <command name="sunnyDay" />
        <command name="runTwice" />
    </case>
    <case name="qtest-ut-casebuilder" exe="qtest-ut-casebuilder.shell">
        <command name="construct" />
        <command name="noCommands" />
        <command name="singleCommand" />
        <command name="multipleCommands" />
        <command name="garbageInFront" />
        <command name="angleBracketGarbage" />
        <command name="garbageInFunctionsOutput" />
    </case>
  <case name="qtest-ut-qtestcase" exe="qtest-ut-qtestcase.shell">
    <command name="construct" />
    <command name="addCommand" />
    <command name="addCommands" />
  </case>
  <case name="qtest-ut-qtestcommand" exe="qtest-ut-qtestcommand.shell">
  <command name="construct" />
  <command name="cmdString" />
  <command name="cmdStringNoParent" />
  <command name="cmdStringNoSuite" />
  </case>
  <case name="qtest-ut-qtestoutputmorpher" exe="qtest-ut-qtestoutputmorpher.shell" >
        <command name="parse" />
  </case>
  <case name="qtest-ut-qtestoutputparser" exe="qtest-ut-qtestoutputparser.shell">
    <command name="parse" />
    <command name="initFailure" />
    <command name="cleanupFailure" />
    <command name="doubleFailure" />
  </case>
  <case name="qtest-ut-qtestregister" exe="qtest-ut-qtestregister.shell">
    <command name="parseSuiteXml" />
    <command name="parseMultiSuitesXml" />
    <command name="parseCaseXml" />
    <command name="parseMultiCaseXml" />
    <command name="parseCmdXml" />
    <command name="parseMultiCmdXMl" />
  </case>
  <case name="qtest-ut-qtestsuite" exe="qtest-ut-qtestsuite.shell">
  <command name="construct" />
  <command name="addChildCase" />
  <command name="addChildCases" />
  </case>
  <case name="qtest-ut-suitebuilder" exe="qtest-ut-suitebuilder.shell">
    <command name="construct" />
    <command name="singleSuiteCaseCommand" />
    <command name="multiSuitesCasesCommands" />
    <command name="identicalSuiteNames" />
  </case>
</suite>
</root>
